(defn constant [value] (fn [m] value))
(defn variable [varName] (fn [m] (get m varName)))
(defn unaryOperation [f] (fn [one] (fn [m] (f (one m)))))
(defn binaryOperation [f] (fn [first, second] (fn [m] (f (first m) (second m)))))
(def negate (unaryOperation -))
(def multiply (binaryOperation *))
(def add (binaryOperation +))
(def subtract (binaryOperation -))
(def divide (binaryOperation (fn [a, b] (/ (double a) (double b)))))